# Generated by: tyk-ci/wf-gen
# Generated on: Wed 17 Feb 11:56:37 UTC 2021

# Generation commands:
# ./pr.zsh -title separate dockerfiles #2 -branch goreleaser/more -p
# m4 -E -DxREPO=tyk


# Check the documentation at http://goreleaser.com
# This project needs CGO_ENABLED=1 and the cross-compiler toolchains for
# - arm64
# - macOS (only 10.15 is supported)
# - amd64

builds:
  - id: std-linux
    ldflags:
      - -X gateway.VERSION={{.Version}} -X gateway.commit={{.Commit}} -X gateway.buildDate={{.Date}} -X gateway.builtBy=goreleaser
    goos:
      - linux
    goarch:
      - amd64
  - id: std-darwin
    ldflags:
      - -X gateway.VERSION={{.Version}} -X gateway.commit={{.Commit}} -X gateway.buildDate={{.Date}} -X gateway.builtBy=goreleaser
    env:
      - CC=o64-clang
    goos:
      - darwin
    goarch:
      - amd64
  - id: std-arm64
    ldflags:
      - -X gateway.VERSION={{.Version}} -X gateway.commit={{.Commit}} -X gateway.buildDate={{.Date}} -X gateway.builtBy=goreleaser
    env:
      - CC=aarch64-linux-gnu-gcc
    goos:
      - linux
    goarch:
      - arm64
  # static builds strip symbols and do not allow plugins
  - id: static-amd64
    ldflags:
      - -s -w -X gateway.VERSION={{.Version}} -X gateway.commit={{.Commit}} -X gateway.buildDate={{.Date}} -X gateway.builtBy=goreleaser
      - -linkmode external -extldflags -static
    goos:
      - linux
    goarch:
      - amd64


dockers:
  - ids:
      - std-linux
    image_templates:
      - "tykio/tyk-gateway:{{ .Tag }}"
      - "tykio/tyk-gateway:v{{ .Major }}.{{ .Minor }}"
      - "{{ .Env.ECR_REGISTRY }}:{{ .Env.IMAGE_TAG }}"
      - "{{ .Env.ECR_REGISTRY }}:{{ .Commit }}"
      - "{{ .Env.ECR_REGISTRY }}:latest"
    build_flag_templates:
      - "--build-arg=TARBALL=dist/*_linux_amd64.tar.gz"
      - "--build-arg=PORTS=8080"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    goarch: amd64
    goos: linux
    dockerfile: Dockerfile.std
    extra_files:
      - "LICENSE.md"
      - "apps/app_sample.json"
      - "templates"
      - "middleware"
      - "event_handlers/sample"
      - "policies"
      - "coprocess"
      - "tyk.conf.example"
  - ids:
      - static-amd64
    image_templates:
      - "tykio/tyk-gateway:slim"
      - "tykio/tyk-gateway:s{{ .Major }}.{{ .Minor }}"
    build_flag_templates:
      - "--build-arg=TARBALL=dist/*_static_linux_amd64.tar.gz"
      - "--build-arg=PORTS=8080"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}-slim"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    goarch: amd64
    goos: linux
    dockerfile: Dockerfile.slim
    extra_files:
      - "LICENSE.md"
      - "apps/app_sample.json"
      - "templates"
      - "middleware"
      - "event_handlers/sample"
      - "policies"
      - "coprocess"
      - "tyk.conf.example"

nfpms:
  - id: std
    vendor: "Tyk Technologies Ltd"
    homepage: "https://tyk.io"
    maintainer: "Tyk <info@tyk.io>"
    description: Tyk API Gateway
    builds:
      - std-linux
      - std-arm64
    formats:
      - deb
      - rpm
    contents:
      - src: "README*"
        dst: "/opt/tyk/"
      - src: "LICENSE.md"
        dst: "/opt/tyk"
      - src: "apps/app_sample.json"
        dst: "/opt/tyk/apps"
      - src: "templates/*.json"
        dst: "/opt/tyk/templates"
      - src: "install/*"
        dst: "/opt/tyk/install"
      - src: "middleware/*.js"
        dst: "/opt/tyk/middleware"
      - src: "event_handlers/sample/*.js"
        dst: "/opt/tyk/event_handlers/sample"
      - src: "policies/*.json"
        dst: "/opt/tyk/policies"
      - src: "coprocess/*"
        dst: "/opt/tyk/coprocess"
      - src: tyk.conf.example
        dst: /opt/tyk/tyk.conf
        type: "config|noreplace"
    scripts:
      preinstall: "install/before_install.sh"
      postinstall: "install/post_install.sh"
      postremove: "install/post_remove.sh"
    bindir: "/opt/tyk-gateway"
    overrides:
      rpm:
        replacements:
          amd64: x86_64
          arm: aarch64
      deb:
        replacements:
          arm: arm64
    rpm:
      signature:
        key_file: tyk.io.signing.key
    deb:
      signature:
        key_file: tyk.io.signing.key
        type: origin


archives:
- id: std-linux
  builds:
    - std-linux
  files:
    - README.md
    - "LICENSE.md"
    - "apps/app_sample.json"
    - "templates/*.json"
    - "install/*"
    - "middleware/*.js"
    - "event_handlers/sample/*.js"
    - "policies/*.json"
    - "coprocess/*"
    - tyk.conf.example

- id: std-arm64
  builds:
    - std-arm64
  files:
    - README.md
    - "LICENSE.md"
    - "apps/app_sample.json"
    - "templates/*.json"
    - "install/*"
    - "middleware/*.js"
    - "event_handlers/sample/*.js"
    - "policies/*.json"
    - "coprocess/*"
    - tyk.conf.example

- id: static-amd64
  name_template: "{{ .ProjectName }}_{{ .Version }}_static_{{ .Os }}_{{ .Arch }}"
  builds:
    - static-amd64
  files:
    - README.md
    - "LICENSE.md"
    - "apps/app_sample.json"
    - "templates/*.json"
    - "install/*"
    - "middleware/*.js"
    - "event_handlers/sample/*.js"
    - "policies/*.json"
    - "coprocess/*"
    - tyk.conf.example


checksum:
  disable: false

signs:
  - id: std
    artifacts: checksum

changelog:
  sort: asc
  filters:
    exclude:
    - '^utils:'
    - (?i)typo
    - 'Merge (pull request|branch)'
